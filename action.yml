name: "E2E test"
description: "E2E test for full agency functionality acceptance testing."
inputs:
  service:
    description: "service to replace"
    required: false
    default: ""
  service-context:
    description: "path to image context, relative to repository root"
    required: false
    default: "./"
  service-dockerfile:
    description: "path to image dockerfile, relative to context"
    required: false
    default: "Dockerfile"
  service-go-build-args:
    description: "service build arguments"
    required: false
    default: "-cover"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: prepare docker-compose file
      if: ${{ inputs.service != '' }}
      shell: bash
      run: $GITHUB_ACTION_PATH/env/prepare.sh ${{ inputs.service }} ${{ inputs.service-context }} ${{ inputs.service-dockerfile }}
    - uses: actions/setup-node@v3
      with:
        node-version: '18.12'
    - name: set chrome version
      shell: bash
      run: |
        full_version=$(google-chrome --product-version)
        echo "chrome_version=$(echo "${full_version%.*.*.*}")" >> $GITHUB_ENV
    - name: init env
      shell: bash
      run: |
        cd $GITHUB_ACTION_PATH
        ./env/init.sh
        docker-compose -f ./env/docker-compose.yml up -d
      env:
        GOBUILD_ARGS: ${{ inputs.service-go-build-args }}
    - name: install cli
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/findy-network/findy-agent-cli/HEAD/install.sh > install.sh
        chmod a+x install.sh
        sudo ./install.sh -b /bin
    - name: install deps
      shell: bash
      run: |
        cd $GITHUB_ACTION_PATH
        npm ci
        npm install chromedriver@"${{ env.chrome_version }}"
    - name: test
      shell: bash
      run: |
        cd $GITHUB_ACTION_PATH
        npm start
    - name: stop env
      shell: bash
      run: |
        cd $GITHUB_ACTION_PATH
        docker-compose -f ./env/docker-compose.yml stop -t 10
    - name: copy coverage file
      shell: bash
      run: sudo cp -R $GITHUB_ACTION_PATH/env/.data/${{ inputs.service }}/coverage .
    - name: Collect docker logs
      if: ${{ always() }}
      uses: jwalton/gh-docker-logs@v2
      with:
        dest: '$GITHUB_ACTION_PATH/tests_output/docker-logs'
    - name: archive logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: e2e-logs
        path: $GITHUB_ACTION_PATH/tests_output
